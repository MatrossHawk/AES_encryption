# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oeJtXLQJ3rkF9x39_OXlwnmmrkwSqj-f
"""

pip install pycryptodome

from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
import base64

class AES256Encryption:
    def __init__(self):
        self.key = get_random_bytes(32)  # AES-256 requires a 256-bit (32-byte) key

    def encrypt(self, plaintext):
        cipher = AES.new(self.key, AES.MODE_EAX)  # Using EAX mode (secure)
        nonce = cipher.nonce  # Random value for uniqueness
        ciphertext, tag = cipher.encrypt_and_digest(plaintext.encode('utf-8'))  # Encrypt data

        # Encode the ciphertext, nonce, and tag in Base64 for safe transmission
        return base64.b64encode(nonce + tag + ciphertext).decode('utf-8')

    def decrypt(self, encrypted_data):
        data = base64.b64decode(encrypted_data)  # Decode from Base64
        nonce, tag, ciphertext = data[:16], data[16:32], data[32:]  # Extract nonce, tag, ciphertext

        cipher = AES.new(self.key, AES.MODE_EAX, nonce=nonce)  # Recreate AES cipher with nonce
        plaintext = cipher.decrypt_and_verify(ciphertext, tag)  # Decrypt and verify authenticity
        return plaintext.decode('utf-8')

# Example Usage
aes = AES256Encryption()
message = input("enter the message")
encrypted_msg = aes.encrypt(message)
decrypted_msg = aes.decrypt(encrypted_msg)

print(f"Original Message: {message}")
print(f"Encrypted: {encrypted_msg}")
print(f"Decrypted: {decrypted_msg}")









